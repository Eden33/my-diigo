<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets">
<h:head>
	<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/3.11.0/build/cssreset/cssreset-min.css" />
	<link href="../../css/style.css" rel="Stylesheet" type="text/css" />
	<script type="text/javascript">
		function showError(data) {
			alert("Server error ocurred. Please try again later. Status: "+data.status);
		}
		function showLoadingGif(data) {
			showIndicatorRegion(data, "loadingIndicator");
		}
		function showIndicatorRegion(data, regionId) {
			if(data.status == "begin") {
				showElement(regionId);
			} else if(data.status = "success") {
				hideElement(regionId);
			}
		}
		function showElement(id) {
			document.getElementById(id).style.display = "inline-block";
		}
		function hideElement(id) {
			document.getElementById(id).style.display = "none";
		}
		function selectDemo(value) {
			document.getElementById("demoSelectForm:selectOneMenu").value = value;
			document.getElementById("demoSelectForm").submit();
		}
	</script>
</h:head>
<h:body>
	<div class="div_head">
		Hello #{sessionBean.login} <br />
		<h:form style="float: none;" id="demoSelectForm">
			<span>
				Select a form example:
			</span>
			<h:selectOneMenu 
				id="selectOneMenu"
				onchange="submit()"
				valueChangeListener="#{selectedForm.valueChangedListener}"
				value="#{selectedForm.selected}">
				<f:selectItem itemValue="#{selectedForm.defaultItem}" />
				<f:selectItem itemValue="#{selectedForm.resetFormItem}" />
				<f:selectItem itemValue="#{selectedForm.simpleRandomAjaxFormItem}" />
				<f:selectItem itemValue="#{selectedForm.cityInfoAjaxFormItem}" />
				<f:selectItem itemValue="#{selectedForm.ajaxLoadingGifFormItem}" />
				<f:selectItem itemValue="#{selectedForm.manualValidationFormItem}" />
			</h:selectOneMenu>
		</h:form>
	</div>
	<div class="div_content">
	
		<div id="loadingIndicator" style="display: none; position: absolute; top: 0px; left: 0px; width: 100%; 
						height: 100%; text-align: center;">
			<div style="min-height: 150px;">&nbsp;</div>
			<span style="display: inline-block;">
				<img src="../../img/ajax-loader.gif" /><br/><br/>
				Loading Data From Server ...
			</span>
		</div>
	
	<div class="div_navigation_example_content">
			
		<!-- Reset Form START -->
		<h:form
			rendered="#{selectedForm.selected == selectedForm.resetFormItem}">
			<table>
				<tr>
					<td>Float Value:</td>
					<td><h:inputText required="true"
						requiredMessage="Please enter a float value"
						converterMessage="This is not a valid float value"
						id="floatValueId"
						value="#{dataB.floatValue}"></h:inputText>
					</td>
					<td><h:message for="floatValueId" styleClass="red_error"></h:message></td>
				</tr>
				<tr>
					<td></td>
					<td><h:commandButton value="Send" action="#{dataB.submit}"></h:commandButton>
						<h:commandButton value="Reset Submitted Values"
							actionListener="#{dataB.reset}" immediate="true"></h:commandButton>
					</td>
				</tr>
			</table>
			<br />
			Sumitted Float Value: #{dataB.floatValue}
			<br/><br/>
			This form uses implict automatic validation. <br/>
			This means type validation is done by the JSF framework.<br/>			
		 	All in all it is not as flexible but faster to implement as <a href='javascript:selectDemo("#{selectedForm.manualValidationFormItem}");'>manual validation</a>. <br/>
		 	Which validation method is choosen in practice depends on the task and the developers experience.
		</h:form>
		<!-- Reset Form END -->
		
		<!-- Simple AJAX START -->
		<h:form
			rendered="#{selectedForm.selected == selectedForm.simpleRandomAjaxFormItem}">
			<table>
				<tr>
					<td></td>
					<td><h:commandButton value="Simple Ajax" action="No action Controller needed">
						<f:ajax render="outputTextSimpleAjax" />
					</h:commandButton>
					</td>
				</tr>
				<tr>
				<td colspan="2">
				<br/>
				If the "value" attribute computes a new result each time, then the "action" of the button can be a dummy value.<br/>
				The target of the render must be inside the same h:form<br/><br/>
				<h:outputText value="#{dataB.randomStringValue}" id="outputTextSimpleAjax" />				
				</td>
				</tr>
			</table>
		</h:form>

		<!-- Simple AJAX END -->
		
		<!-- City Info AJAX START -->
		<h:form
			rendered="#{selectedForm.selected == selectedForm.cityInfoAjaxFormItem}">
			<table>
				<tr>
					<td>
						<h:selectOneMenu value="#{locationBean.state}">
							<f:selectItems value="#{locationBean.states}"/>
							<f:ajax render="citySelect outTextPopulation outTextZipCode outTextAreaCode"/>
						</h:selectOneMenu>
					</td>
					<td>
						<h:selectOneMenu 
								id = "citySelect"
								disabled="#{locationBean.cityListDisabled}"
								value="#{locationBean.cityName}">
							<f:selectItems value="#{locationBean.cities}"/>
							<f:ajax render="outTextPopulation outTextZipCode outTextAreaCode"/>
						</h:selectOneMenu>
					</td>
				</tr>
				<tr>
					<td>Population:</td>
					<td>
						<h:outputText 
							id="outTextPopulation"
							value="#{locationBean.city.population == 0 ? '' : locationBean.city.population}"/>
					</td>
				</tr>	
				<tr>
					<td>Zip Code:</td>
					<td>
						<h:outputText 
							id="outTextZipCode"
							value="#{locationBean.city.zipCode == 0 ? '' : locationBean.city.zipCode}"/>
					</td>
				</tr>
				<tr>
					<td>Area Code:</td>
					<td>
						<h:outputText 
							id="outTextAreaCode"
							value="#{locationBean.city.areaCode == 0 ? '' : locationBean.city.areaCode}"/>
					</td>
				</tr>			
			</table>
			<br />
		</h:form>
		<!-- City Info AJAX END -->
		
		<!-- AJAX loading gif START -->
		<h:form
			rendered="#{selectedForm.selected == selectedForm.ajaxLoadingGifFormItem}">
			<table>
				<tr>
					<td>
						<h:commandButton action="#{dataB.submitSlow}" value="Slow Ajax Query">
							<f:ajax execute="@form" onevent="showLoadingGif" onerror="showError"/>
						</h:commandButton>
					</td>
				</tr>
			</table>
			<br />
		</h:form>
		<!--  AJAX loading gif END -->
		
		<!-- Manual Validation Form START -->
		<h:form
			rendered="#{selectedForm.selected == selectedForm.manualValidationFormItem}"
			prependId="false">
				<h:panelGrid columns="3">
				
				Enter an integer: 
				<h:inputText id="inputTextInteger" value="#{dataB.actionControllerValidationValue}"/>
				<h:panelGroup>
				&nbsp;&nbsp;<h:message styleClass="red_error" for="inputTextInteger"/>
				</h:panelGroup>
				
				&nbsp;
				&nbsp;
				<h:commandButton action="#{dataB.submitActionControllerValidation}" value="Validate in Controller"/>
				</h:panelGrid>
			<br />
			
			<!-- TODO: fix me -->
			
			<ui:fragment rendered='#{dataB.actionControlValidationSuccess}'>
				Integer Submitted: #{dataB.actionControllerValidationValue}
			</ui:fragment>
			<br/><br/>
			This is a manual validation approach:<br/>
			<ul>
				<li>Use a string property for expected integer value</li>
				<li>In this case validation is done in action controller method</li>
				<li>Action controller returns null and submitted value or custom error message is displayed on client side</li>
			</ul>
		</h:form>
	
		<!-- Manual Validation Form END -->
		
		<!-- div_content END -->
		</div>
	</div>
</h:body>
</html>